{"ast":null,"code":"var _jsxFileName = \"/Users/djleamen/Desktop/Docs/Code/Scrozam/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport logo from './logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [trackInfo, setTrackInfo] = useState(null);\n  const [isListening, setIsListening] = useState(false);\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const response = await fetch('http://localhost:3000/detected-song');\n      const data = await response.json();\n      if (data) {\n        setTrackInfo(data);\n      }\n    }, 5000); // Poll every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n  const handleStartListening = async () => {\n    setIsListening(true);\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      const audioChunks = [];\n      mediaRecorder.ondataavailable = event => {\n        audioChunks.push(event.data);\n      };\n      mediaRecorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/wav'\n        });\n        console.log('Audio Blob Size:', audioBlob.size);\n        const formData = new FormData();\n        formData.append('sample', audioBlob, 'audio.wav');\n        try {\n          const response = await fetch('http://localhost:3000/detect-song', {\n            method: 'POST',\n            body: formData\n          });\n          if (!response.ok) {\n            throw new Error('Song detection failed');\n          }\n          const songData = await response.json();\n          setTrackInfo(songData);\n        } catch (error) {\n          console.error('Error detecting song:', error);\n        }\n      };\n      mediaRecorder.start();\n      setTimeout(() => {\n        mediaRecorder.stop();\n        setIsListening(false);\n      }, 10000); // Record for 10 seconds\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      setIsListening(false);\n    }\n  };\n  const scrobbleToLastFM = async track => {\n    try {\n      // Placeholder for Last.fm API integration\n      console.log(`Scrobbling to Last.fm: ${track.title} by ${track.artist}`);\n      // Example: Call your backend or direct Last.fm API with the detected track info\n    } catch (error) {\n      console.error(\"Failed to scrobble to Last.fm\", error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Scrozam!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Listen to music and scrobble tracks to Last.fm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartListening,\n        disabled: isListening,\n        children: isListening ? 'Listening...' : 'Start Listening'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), trackInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Detected Track\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 16\n          }, this), \" \", trackInfo.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Artist:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 16\n          }, this), \" \", trackInfo.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tMeVPpI6ZS0k9nHofEfbNYxS3+8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","jsxDEV","_jsxDEV","App","_s","trackInfo","setTrackInfo","isListening","setIsListening","interval","setInterval","response","fetch","data","json","clearInterval","handleStartListening","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","audioChunks","ondataavailable","event","push","onstop","audioBlob","Blob","type","console","log","size","formData","FormData","append","method","body","ok","Error","songData","error","start","setTimeout","stop","scrobbleToLastFM","track","title","artist","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/djleamen/Desktop/Docs/Code/Scrozam/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport logo from './logo.png';\n\nfunction App() {\n  const [trackInfo, setTrackInfo] = useState(null);\n  const [isListening, setIsListening] = useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const response = await fetch('http://localhost:3000/detected-song');\n      const data = await response.json();\n      if (data) {\n        setTrackInfo(data);\n      }\n    }, 5000); // Poll every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleStartListening = async () => {\n    setIsListening(true);\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      const audioChunks = [];\n  \n      mediaRecorder.ondataavailable = (event) => {\n        audioChunks.push(event.data);\n      };\n  \n      mediaRecorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });\n        console.log('Audio Blob Size:', audioBlob.size);\n      \n        const formData = new FormData();\n        formData.append('sample', audioBlob, 'audio.wav');\n        \n        try {\n          const response = await fetch('http://localhost:3000/detect-song', {\n            method: 'POST',\n            body: formData,\n          });\n          \n          if (!response.ok) {\n            throw new Error('Song detection failed');\n          }\n      \n          const songData = await response.json();\n          setTrackInfo(songData);\n        } catch (error) {\n          console.error('Error detecting song:', error);\n        }\n      };\n  \n      mediaRecorder.start();\n      setTimeout(() => {\n        mediaRecorder.stop();\n        setIsListening(false);\n      }, 10000); // Record for 10 seconds\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      setIsListening(false);\n    }\n  };\n\n  const scrobbleToLastFM = async (track) => {\n    try {\n      // Placeholder for Last.fm API integration\n      console.log(`Scrobbling to Last.fm: ${track.title} by ${track.artist}`);\n      // Example: Call your backend or direct Last.fm API with the detected track info\n    } catch (error) {\n      console.error(\"Failed to scrobble to Last.fm\", error);\n      throw error;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" /> {/* Add this line */}\n        <h1>Welcome to Scrozam!</h1>\n        <p>Listen to music and scrobble tracks to Last.fm</p>\n        <button \n          onClick={handleStartListening} \n          disabled={isListening}\n        >\n          {isListening ? 'Listening...' : 'Start Listening'}\n        </button>\n  \n        {trackInfo && (\n          <div className=\"track-info\">\n            <h2>Detected Track</h2>\n            <p><strong>Title:</strong> {trackInfo.title}</p>\n            <p><strong>Artist:</strong> {trackInfo.artist}</p>\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}